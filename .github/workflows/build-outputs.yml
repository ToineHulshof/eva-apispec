name: Build default outputs

on:
  push:
    branches:
      - main
    paths:
      - 'spec/**'
      - 'tools/**'
  workflow_dispatch: {}


jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        global-json-file: 'global.json'
    - name: Generate OpenAPI
      run: dotnet run --project tools/EVA.SDK.Generator.V2/ -- generate openapi -i spec/spec.json -o output/openapi --overwrite --opt-terse --opt-format json
    - name: Generate ApiDocs
      run: dotnet run --project tools/EVA.SDK.Generator.V2/ -- generate apidocs -i spec/spec.json -o output/apidocs --overwrite

    - name: Commit changes
      run: 'git add .;git config --global user.email "ruben.oost@newblack.io";git config --global user.name "Ruben Oost";git diff-index --quiet HEAD || git commit -m "Outputs for: ${{ github.event.head_commit.message }}";git push origin main'



    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update
    - name: Convert JSON to base64
      shell: bash
      run: |
        base64_file=$(base64 -w 0 output/openapi/openapi.json)
        echo "base64=$base64_file" >> $GITHUB_ENV

    - name: Authenticate
      shell: bash
      run: |
        ID_TOKEN=$(aws cognito-idp initiate-auth \
          --client-id=750p3per77spo8ktilg2f8sl2d \
          --region eu-west-1 \
          --auth-flow=USER_PASSWORD_AUTH \
          --auth-parameters='PASSWORD=${{ secrets.AD_PASSWORD }},USERNAME=${{ secrets.AD_USERNAME }}' \
          --query=AuthenticationResult.IdToken)
        echo "token=$ID_TOKEN" >> $GITHUB_ENV

    - name: Upload OpenAPI and get versionId
      shell: bash
      run: |
        version_response=$(curl -f -s -X POST \
          -H "Authorization: Bearer ${{ env.token }}" \
          -H "Content-Type: application/json" \
          -d '{
            "default": true,
            "document": "${{ env.base64 }}",
            "documentType": "application/json"
          }' \
          "https://newblack.alphadoc.io/v1/documents/${{ secrets.AD_DOCUMENT_BEYOND }}/versions")
        version_id=$(echo "$version_response" | jq -r '.id')
        echo "versionId=$version_id" >> $GITHUB_ENV

    - name: Publish document
      shell: bash
      run: |
        curl -f -s -X PATCH \
          -H "Authorization: Bearer ${{ env.token }}" \
          -H "Content-Type: application/json" \
          -d '{ "default": true }' \
          "https://newblack.alphadoc.io/v1/documents/${{ secrets.AD_DOCUMENT_BEYOND }}/versions/${{ env.versionId }}"