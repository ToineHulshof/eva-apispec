{
  "typename": "GetStockAvailabilityEstimateForProducts",
  "assembly": "EVA.Core",
  "description": "Given a set of products this service returns a detailed estimate for each product when it\u0027s expected to be available.",
  "usage": {
    "request": true,
    "response": false
  },
  "typeArguments": [],
  "typeDependencies": [
    "EVA.Core.RequestMessage\u00601",
    "EVA.Core.Stock.GetStockAvailabilityEstimateForProductsResponse",
    "EVA.Core.Stock.GetStockAvailabilityEstimateForProducts\u002BProduct"
  ],
  "extends": {
    "ref": "EVA.Core.RequestMessage\u00601",
    "args": [
      {
        "ref": "EVA.Core.Stock.GetStockAvailabilityEstimateForProductsResponse",
        "args": [],
        "nullable": true
      }
    ],
    "nullable": false
  },
  "properties": {
    "IncludeReservedOrders": {
      "type": {
        "ref": "bool",
        "args": [],
        "nullable": false
      },
      "description": "If set true the service will also return reserved OrderLines",
      "skippable": false,
      "allowedValues": []
    },
    "IncludeShopReplenishments": {
      "type": {
        "ref": "bool",
        "args": [],
        "nullable": false
      },
      "description": "If set to true the service will also return purchase OrderLines meant for shops",
      "skippable": false,
      "allowedValues": []
    },
    "OrganizationUnitID": {
      "type": {
        "ref": "int64",
        "args": [],
        "nullable": true
      },
      "skippable": false,
      "datamodel": {
        "name": "OrganizationUnit",
        "lenient": false,
        "supportsCustomID": true,
        "isEvaID": true,
        "isExternalID": false
      },
      "allowedValues": []
    },
    "Products": {
      "type": {
        "ref": "array",
        "args": [
          {
            "ref": "EVA.Core.Stock.GetStockAvailabilityEstimateForProducts\u002BProduct",
            "args": [],
            "nullable": true
          }
        ],
        "nullable": false
      },
      "skippable": false,
      "required": {
        "current": true
      },
      "requiredAllowEmpty": {
        "current": false
      },
      "allowedValues": []
    }
  }
}