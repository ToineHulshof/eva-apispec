{
  "typename": "ImportProducts",
  "assembly": "EVA.PIM",
  "description": "This service lets you create and update a set of products and their content.\n\nThe set is products is hierarchical in nature. For example, if you have a shirt that comes in 3 colors and 5 sizes per color, you would normally define a root product that then contains the 3 color products\nand each color product would contain the 5 different sizes, which would be the SKU. How you define the hierarchy is up to you, it\u0027s also fine to have the 3 color products as root products and only have them\ncontain the SKUs, or to forego a hierarchy entirely and just create the SKUs, but creating the root and color products is useful for search and frontend purposes.\n\n\nAn example request of a hierarchy:\n\n{\n  \u0022ID\u0022: \u0022special_shirt\u0022,\n  \u0022Name\u0022: \u0022Special Shirt\u0022,\n  \u0022TaxCode\u0022: \u0022High\u0022,\n  \u0022Variations\u0022: {\n    \u0022Property\u0022: \u0022color_code\u0022,\n    \u0022LogicalLevel\u0022: \u0022color\u0022,\n    \u0022Products\u0022: [\n      {\n        \u0022ID\u0022: \u0022special_shirt_blue\u0022,\n        \u0022Name\u0022: \u0022Special Shirt - Blue\u0022,\n        \u0022VariationValues\u0022: [\n          {\n            \u0022LanguageID\u0022: null,\n            \u0022Value\u0022: \u0022BLUE\u0022\n          }\n        ],\n        \u0022Variations\u0022: {\n          \u0022Property\u0022: \u0022size_code\u0022,\n          \u0022LogicalLevel\u0022: \u0022size\u0022,\n          \u0022Products\u0022: [\n            {\n              \u0022ID\u0022: \u0022sku_special_shirt_blue_xl\u0022,\n              \u0022VariationValues\u0022: [\n                {\n                  \u0022LanguageID\u0022: null,\n                  \u0022Value\u0022: \u0022XL\u0022\n                }\n              ]\n            }\n          ]\n        }\n      }\n    ]\n  }\n}",
  "usage": {
    "request": true,
    "response": false
  },
  "typeArguments": [],
  "typeDependencies": [
    "EVA.Core.RequestMessage\u00601",
    "EVA.PIM.Services.Products.ImportProductsResponse",
    "EVA.PIM.Services.Products.ImportProducts\u002BProductPropertyConfiguration",
    "EVA.PIM.Services.Products.ImportProducts\u002BProduct",
    "EVA.PIM.Services.Products.ImportProducts\u002BImportType"
  ],
  "extends": {
    "ref": "EVA.Core.RequestMessage\u00601",
    "args": [
      {
        "ref": "EVA.PIM.Services.Products.ImportProductsResponse",
        "args": [],
        "nullable": true
      }
    ],
    "nullable": false
  },
  "properties": {
    "CustomPropertyTypes": {
      "type": {
        "ref": "array",
        "args": [
          {
            "ref": "EVA.PIM.Services.Products.ImportProducts\u002BProductPropertyConfiguration",
            "args": [],
            "nullable": true
          }
        ],
        "nullable": true
      },
      "description": "Custom properties used in product content can be defined by specifying their definition in this collection.",
      "skippable": false,
      "allowedValues": []
    },
    "DownloadImagesInBackground": {
      "type": {
        "ref": "bool",
        "args": [],
        "nullable": false
      },
      "description": "If specified as true this will not download any images immediately, which might cause the request to run for a long time, but this will instead download the images in the background.",
      "skippable": false,
      "allowedValues": []
    },
    "ImageBlobCategory": {
      "type": {
        "ref": "string",
        "args": [],
        "nullable": true
      },
      "description": "A string that identifies the category in which the ProductImages will be stored. It\u0027s optional, when not provided the SystemID will be used instead.",
      "skippable": false,
      "stringLengthConstraint": {
        "min": 2,
        "max": 50
      },
      "allowedValues": []
    },
    "Products": {
      "type": {
        "ref": "array",
        "args": [
          {
            "ref": "EVA.PIM.Services.Products.ImportProducts\u002BProduct",
            "args": [],
            "nullable": true
          }
        ],
        "nullable": false
      },
      "description": "The list of products to create or update. If a product does not exist it\u0027s created and if a product with the same ID and SystemID already exists it is updated.",
      "skippable": false,
      "required": {
        "current": true
      },
      "requiredAllowEmpty": {
        "current": false
      },
      "allowedValues": []
    },
    "RootLogicalLevel": {
      "type": {
        "ref": "string",
        "args": [],
        "nullable": true
      },
      "description": "The LogicalLevel that will be assigned to the root level of a product hierarcy. If not specified a default value is used.\n\nSee ProductVariation.LogicalLevel for more information.",
      "skippable": false,
      "allowedValues": []
    },
    "SystemID": {
      "type": {
        "ref": "string",
        "args": [],
        "nullable": false
      },
      "description": "A string that identifies the system that was used to call this service. In combination with a product\u0027s ID, this is what uniquely identifies the product in EVA.\nThe SystemID must be the same for every call, if it\u0027s different from a previous call then new products will be created.",
      "skippable": false,
      "required": {
        "current": true
      },
      "requiredAllowEmpty": {
        "current": false
      },
      "stringLengthConstraint": {
        "min": 2,
        "max": 50
      },
      "allowedValues": []
    },
    "Type": {
      "type": {
        "ref": "EVA.PIM.Services.Products.ImportProducts\u002BImportType",
        "args": [],
        "nullable": true
      },
      "description": "Determines the behavior of this service.",
      "skippable": false,
      "allowedValues": []
    },
    "WaitForProductComposition": {
      "type": {
        "ref": "bool",
        "args": [],
        "nullable": false
      },
      "description": "By default this service only blocks for the time that it takes to store the requested modifications. After that time, some processing still needs to happen before the product is fully ready and searchable, but this happens in the background.\nIf this parameter is specified as true then this service blocks for the full duration that it takes to complete the full process.",
      "skippable": false,
      "allowedValues": []
    }
  }
}