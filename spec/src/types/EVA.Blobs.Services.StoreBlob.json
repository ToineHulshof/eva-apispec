{
  "typename": "StoreBlob",
  "assembly": "EVA.Blobs",
  "description": "Creates a new blob and stores \u0060Data\u0060 to it.\n\nThe combination of \u0060Category\u0060 and \u0060OriginalName\u0060 must be unique, as the \u0060GetBlobInfoService\u0060 allows retrieval based on these values. Internally, a fresh and unique \u0060Guid\u0060 is\ngenerated and returned from this request. The response also contains the full \u0060Url\u0060 by which this blob can be accessed (which will contain aforementioned \u0060Guid\u0060).\n\n- [x] The \u0060MimeType\u0060 is required, a few suggestions would be \u0060application/pdf\u0060, \u0060text/csv\u0060 or \u0060application/json\u0060 - but you probably already know this.\n- [x] The \u0060ExpireDate\u0060 is the date at which the given blob should expire. Leave this empty to *suggest* to keep it forever. We will bag it and get rid of it when the time is right. :hocho:\n\nWhen retrieving the blob, it will be returned to you using the \u0060MimeType\u0060 as \u0060ContentType\u0060 header and a proper \u0060Expires\u0060 header.\n\n*NOTE*: leaving \u0060OriginalName\u0060 empty means EVA treats this file as a temporary one and it\u0027ll be removed after a set period. Which can be manipulated through the setting \u0060Blobs:DefaultLifeTime\u0060\nwhich is the default expire time for these kinds of blobs in minutes.",
  "usage": {
    "request": true,
    "response": false
  },
  "enumIsFlag": null,
  "typeArguments": [],
  "typeDependencies": [
    "EVA.Core.RequestMessage\u00601"
  ],
  "extends": {
    "ref": "EVA.Core.RequestMessage\u00601",
    "args": [
      {
        "ref": "EVA.Blobs.Services.StoreBlobResponse",
        "args": [],
        "shared": null,
        "nullable": true
      }
    ],
    "shared": null,
    "nullable": false
  },
  "properties": {
    "Category": {
      "type": {
        "ref": "string",
        "args": [],
        "shared": null,
        "nullable": true
      },
      "description": null,
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "datamodel": null,
      "allowedValues": []
    },
    "Data": {
      "type": {
        "ref": "binary",
        "args": [],
        "shared": null,
        "nullable": false
      },
      "description": null,
      "skippable": false,
      "deprecated": null,
      "required": {
        "current": true,
        "new": null,
        "announced": null,
        "active": null,
        "comment": null
      },
      "requiredAllowEmpty": {
        "current": false,
        "new": null,
        "announced": null,
        "active": null,
        "comment": null
      },
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "datamodel": null,
      "allowedValues": []
    },
    "ExpireDate": {
      "type": {
        "ref": "date",
        "args": [],
        "shared": null,
        "nullable": true
      },
      "description": null,
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "datamodel": null,
      "allowedValues": []
    },
    "MimeType": {
      "type": {
        "ref": "string",
        "args": [],
        "shared": null,
        "nullable": true
      },
      "description": null,
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "datamodel": null,
      "allowedValues": []
    },
    "OriginalName": {
      "type": {
        "ref": "string",
        "args": [],
        "shared": null,
        "nullable": true
      },
      "description": null,
      "skippable": false,
      "deprecated": null,
      "required": null,
      "requiredAllowEmpty": null,
      "minValue": null,
      "maxValue": null,
      "stringLengthConstraint": null,
      "datamodel": null,
      "allowedValues": []
    }
  },
  "enumValues": null,
  "parent": null
}