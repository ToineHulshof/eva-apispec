{
  "name": "GetZonedCycleCount",
  "description": "Returns a detailed view of a ZonedCycleCount by the ID of its UserTask.\n\nThe response contains:\n\n- Which StockLabels to count (\u0060StockLabelsToCount\u0060)\n- The product that needs to be counted. This product contains all the fields in its \u0060Content\u0060 object that were requested through the \u0060IncludedFields\u0060 property on the request, or a default set of fields if not specified.\n- Which StockMutations have been created since the first pre-count (if any) per StockLabel (\u0060StockMutationsSincePreCount\u0060)\n- A list of all pre-counts, complete with the zone that needs to be counted, the user who did the count (if the count already happened) and a list of count results per StockLabel\n- A list of pre-counted quantityies per StockLabel (\u0060PreCountedQuantities\u0060)\n- A list of the total quantity of stock mutated per StockLabel (a summary of \u0060StockMutationsSincePreCount\u0060).\n- The current stock per StockLabel\n- ExpectedPreCountedQuantity: This is stored on the ZonedCyleCount the moment the last pre-count has been completed, and is a sum of the expected Stock at that moment.\n- PreCountedQuantity: The quantity that was actually counted in all pre-counts over all StockLabels. This is recorded when all pre-counts have been completed.",
  "request": {
    "properties": [
      {
        "name": "ID",
        "description": null,
        "type": "int64"
      },
      {
        "name": "IncludedFields",
        "description": null,
        "type": "array"
      }
    ]
  },
  "response": {
    "properties": [
      {
        "name": "CompletionTime",
        "description": null,
        "type": "date"
      },
      {
        "name": "CreatedByID",
        "description": null,
        "type": "int64"
      },
      {
        "name": "CreatedByUserName",
        "description": null,
        "type": "string"
      },
      {
        "name": "CreationTime",
        "description": null,
        "type": "date"
      },
      {
        "name": "ExpectedPreCountedQuantity",
        "description": null,
        "type": "int32"
      },
      {
        "name": "ID",
        "description": null,
        "type": "int64"
      },
      {
        "name": "IsActive",
        "description": null,
        "type": "bool"
      },
      {
        "name": "IsCompleted",
        "description": null,
        "type": "bool"
      },
      {
        "name": "OriginID",
        "description": null,
        "type": "int64"
      },
      {
        "name": "OriginTypeID",
        "description": null,
        "type": "int64"
      },
      {
        "name": "PreCountedQuantities",
        "description": null,
        "type": "array"
      },
      {
        "name": "PreCountedQuantity",
        "description": null,
        "type": "int32"
      },
      {
        "name": "PreCounts",
        "description": null,
        "type": "array"
      },
      {
        "name": "Product",
        "description": null,
        "type": "EVA.Core.Services.ZonedCycleCounts.GetZonedCycleCountProduct"
      },
      {
        "name": "ResultStatus",
        "description": null,
        "type": "EVA.Core.DataModels.ZonedCycleCountResultStatus"
      },
      {
        "name": "StartTime",
        "description": null,
        "type": "date"
      },
      {
        "name": "StockLabelQuantities",
        "description": null,
        "type": "array"
      },
      {
        "name": "StockLabelsToCount",
        "description": null,
        "type": "array"
      },
      {
        "name": "StockMutationQuantitiesSincePreCount",
        "description": null,
        "type": "array"
      },
      {
        "name": "StockMutationsSincePreCount",
        "description": null,
        "type": "array"
      },
      {
        "name": "UserID",
        "description": null,
        "type": "int64"
      },
      {
        "name": "UserName",
        "description": null,
        "type": "string"
      },
      {
        "name": "UserTaskID",
        "description": null,
        "type": "int64"
      }
    ]
  }
}