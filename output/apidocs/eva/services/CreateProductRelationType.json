{
  "name": "CreateProductRelationType",
  "method": "POST",
  "path": "/message/CreateProductRelationType",
  "description": "Create a new ProductRelationType.",
  "auth_description": "Requires a user of type \u0060Employee\u0060 or \u0060Api\u0060 with functionality \u0060ProductRelationTypes:Create\u0060",
  "headers": [
    {
      "name": "EVA-User-Agent",
      "type": "string",
      "description": "The user agent that is making these calls. Don\u0027t make this specific per device/browser but per application. This should be of the form: \u0060MyFirstUserAgent/1.0.0\u0060",
      "required": true,
      "default": null
    },
    {
      "name": "EVA-Requested-OrganizationUnitID",
      "type": "integer",
      "description": "The ID of the organization unit to run this request in.",
      "required": false,
      "default": null
    },
    {
      "name": "EVA-Requested-OrganizationUnit-Query",
      "type": "string",
      "description": "The query that selects the organization unit to run this request in.",
      "required": false,
      "default": null
    },
    {
      "name": "EVA-IDs-Mode",
      "type": "string",
      "description": "The IDs mode to run this request in. Currently only \u0060ExternalIDs\u0060 is supported.",
      "required": false,
      "default": null
    },
    {
      "name": "EVA-IDs-BackendSystemID",
      "type": "string",
      "description": "The ID of the backend system that is used to resolve the IDs.",
      "required": false,
      "default": null
    }
  ],
  "request_samples": [
    {
      "name": "CURL",
      "sample": "# Coming soon\n# Very soon...",
      "syntax": "bash"
    }
  ],
  "response_samples": [
    {
      "name": "200",
      "sample": "{}"
    },
    {
      "name": "400",
      "sample": "{\n  \u0022Error\u0022: {\n    \u0022Code\u0022: \u0022COVFEFE\u0022,\n    \u0022Type\u0022: \u0022RequestValidationFailure\u0022,\n    \u0022Message\u0022: \u0022Validation of the request message failed: Field ABC has an invalid value for a Product.\u0022,\n    \u0022RequestID\u0022: \u0022576b62dd71894e3281a4d84951f44e70\u0022\n  }\n}"
    },
    {
      "name": "403",
      "sample": "{\n  \u0022Error\u0022: {\n    \u0022Code\u0022: \u0022COVFEFE\u0022,\n    \u0022Type\u0022: \u0022Forbidden\u0022,\n    \u0022Message\u0022: \u0022You are not authorized to execute this request.\u0022,\n    \u0022RequestID\u0022: \u0022576b62dd71894e3281a4d84951f44e70\u0022\n  }\n}"
    }
  ],
  "deprecation_notice": null,
  "request_type_id": "B",
  "response_type_id": "G",
  "types": {
    "C": [],
    "D": [
      {
        "name": "ExactMatch",
        "description": "",
        "type": "boolean",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "From",
        "description": "",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "IncludeMissing",
        "description": "",
        "type": "boolean | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Negation",
        "description": "",
        "type": "boolean",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "To",
        "description": "",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Values",
        "description": "",
        "type": "array[any] | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      }
    ],
    "E": [
      {
        "name": "PrimaryProductID",
        "description": "",
        "type": "integer",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "RelatedProductID",
        "description": "",
        "type": "integer | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      }
    ],
    "F": [],
    "B": [
      {
        "name": "BackendID",
        "description": "",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Direction",
        "description": "The direction of the relation. This can either be;\nUnidirectional; one-way relation. For example \u0027parent-child\u0027 or \u0027replaced by\u0027\nBidirectional; two-way relation. For example \u0027maybe your also intrested in\u0027 or \u0027others also bought\u0027\nGroup; collective relation which allows for many products as part of a group. For example \u0027all products that are blue\u0027 or \u0027all products from summer-2022\u0027. This type does not accept a StockRelationType.",
        "type": "object",
        "required": true,
        "properties_id": "C",
        "one_of": null
      },
      {
        "name": "DynamicRelationProductID",
        "description": "You can create dynamic bi- or uni directional relations by defining a \u0060DynamicRelationProductID\u0060 in combination with a \u0060ProductSearchTemplateID\u0060 or \u0060ProductSearchFilters\u0060.\nBy setting the \u0060UseDynamicRelationProductAsRelatedProduct\u0060 to false (default), the \u0060DynamicRelationProductID\u0060 will be considered as the primary product and the result from the \u0060ProductSearchTemplateID\u0060 or \u0060ProductSearchFilters\u0060 will be considered as related products\nBy setting the \u0060UseDynamicRelationProductAsRelatedProduct\u0060 to true , the result from the \u0060ProductSearchTemplateID\u0060 or \u0060ProductSearchFilters\u0060 will be considered as primary products and the \u0060DynamicRelationProductID\u0060 will be considered as the related product",
        "type": "integer | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "PrimaryName",
        "description": "This is the primary name the relation. For example; if primary name is \u0027Blocks\u0027, the secondary name could be something in the lines of \u0027Blocked by\u0027.",
        "type": "string",
        "required": true,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "ProductSearchFilters",
        "description": "Only available when Direction is set to \u0060Group\u0060.",
        "type": "map[object] | null",
        "required": false,
        "properties_id": "D",
        "one_of": null
      },
      {
        "name": "ProductSearchTemplateID",
        "description": "Only available when Direction is set to \u0060Group\u0060.",
        "type": "integer | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Relations",
        "description": "",
        "type": "array[object] | null",
        "required": false,
        "properties_id": "E",
        "one_of": null
      },
      {
        "name": "SecondaryName",
        "description": "This is the secondary name the relation. For example; if primary name is \u0027Blocks\u0027, the secondary name could be something in the lines of \u0027Blocked by\u0027.",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "StockRelationType",
        "description": "Indicates which stock relation type the relation has. In most cases this will be \u0027None\u0027. The following options are available:\nNone; No stock relation\nReplacing; When the PrimaryProduct is no longer in stock, the system can automaticly use the RelatedProduct as it\u0027s replacement (or vice versa if \u0060Direction\u0060 is set to \u0060Bidirectional\u0060).",
        "type": "object",
        "required": true,
        "properties_id": "F",
        "one_of": null
      },
      {
        "name": "UseDynamicRelationProductAsRelatedProduct",
        "description": "",
        "type": "boolean",
        "required": false,
        "properties_id": null,
        "one_of": null
      }
    ],
    "H": [
      {
        "name": "Code",
        "description": "A unique ID identifying this error.",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Data",
        "description": "",
        "type": "any | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Message",
        "description": "A human-readable message describing the error.",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "RequestID",
        "description": "A unique ID identifying the request. Please provide this ID when contacting support.",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Type",
        "description": "A short description of the error type.",
        "type": "string | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      }
    ],
    "I": [
      {
        "name": "ExternalIDs",
        "description": "When using the \u0060ExternalIDs\u0060 mode, this will hold the resolved external IDs.",
        "type": "map[map[string]] | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "IsAsyncResultAvailable",
        "description": "This is a flag indicating whether the async request is done. If it is \u0060null\u0060, it is not an async service. If it is \u0060false\u0060, the response is not yet available. Do not process the properties in that case. It is is \u0060true\u0060 the properties are filled with the result of the call.",
        "type": "boolean | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "UnresolvedExternalIDs",
        "description": "When using the \u0060ExternalIDs\u0060 mode, this will hold the external IDs we couldn\u0027t resolve.",
        "type": "map[array[string]] | null",
        "required": false,
        "properties_id": null,
        "one_of": null
      }
    ],
    "G": [
      {
        "name": "Error",
        "description": "",
        "type": "object | null",
        "required": false,
        "properties_id": "H",
        "one_of": null
      },
      {
        "name": "ID",
        "description": "",
        "type": "integer",
        "required": false,
        "properties_id": null,
        "one_of": null
      },
      {
        "name": "Metadata",
        "description": "",
        "type": "object | null",
        "required": false,
        "properties_id": "I",
        "one_of": null
      }
    ]
  }
}